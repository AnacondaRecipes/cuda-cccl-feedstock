{% set name = "cuda-cccl" %}
{% set version = "12.6.77" %}
{% set cccl_version = "2.5.0" %}
{% set cuda_version = "12.6" %}
{% set platform = "linux-x86_64" %}  # [linux64]
{% set platform = "linux-ppc64le" %}  # [ppc64le]
{% set platform = "linux-sbsa" %}  # [aarch64]
{% set platform = "windows-x86_64" %}  # [win]
{% set target_name = "x86_64-linux" %}  # [linux64]
{% set target_name = "ppc64le-linux" %}  # [ppc64le]
{% set target_name = "sbsa-linux" %}  # [aarch64]
{% set target_name = "x64" %}  # [win]
{% set extension = "tar.xz" %}  # [not win]
{% set extension = "zip" %}  # [win]

# CUDA C++ Core Libraries (CCCL) includes thrust, cub, and libcudacxx. These are header-only libraries.
# The cccl package ships CCCL headers in the environment's include directory for use in downstream recipes that require CCCL. It follows CCCL upstream versioning. Use this package to say, "I want a specific version of CCCL headers when building my package (which may be newer than the versions shipped in the latest CUDA Toolkit)."
# The cuda-cccl_{{ target_platform }} package (e.g. cuda-cccl_linux-64) ships CCCL headers in 'targets/.../include' that can be used by nvcc, the CUDA compiler. It follows CUDA Toolkit versioning. This package should only be a dependency of the cuda-cudart / cuda-nvcc packages that require CCCL to function. It is target-specific to allow for cross-compilation, as a dependency of cuda-nvcc.
# The cuda-cccl package is a metapackage that depends on cccl and cuda-cccl_{{ target_platform }} to ensure that versions are consistent. Use this package to say, "I want to build with the thrust headers that shipped with CUDA Toolkit X.Y" by adding dependencies on `cuda-cccl` and `cuda-version X.Y`.

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://developer.download.nvidia.com/compute/cuda/redist/cuda_cccl/{{ platform }}/cuda_cccl-{{ platform }}-{{ version }}-archive.{{ extension }}
  sha256: 9c3145ef01f73e50c0f5fcf923f0899c847f487c529817daa8f8b1a3ecf20925  # [linux64]
  sha256: cea5f1487b9ff78a01cadd96e950bfe6fe4bc638849fae81b8739adfdde47146  # [aarch64]
  sha256: 469b783b6731964170b3d27ae214e97e2a63ec93c57ace3ed4052e6d01261f2e  # [win]

build:
  number: 0
  skip: true  # [osx or ppc64le]

test:
  requires:
    - cmake  # [linux]
  files:
    - verify-version.cmake  # [linux]
  commands:
    - test -d $PREFIX/lib/cmake                      # [linux]
    - test -d $PREFIX/targets/{{ target_name }}/lib  # [linux]
    - if not exist %LIBRARY_LIB%\{{ target_name }}\cmake exit 1    # [win]
    - if not exist %LIBRARY_INC%\targets\{{ target_name }} exit 1  # [win]
    # Extract the CCCL version from the cuda_cccl archive, and compare to the
    # version of the cccl conda package.
    - '[[ "$(cmake -DCCCL_VERSION_FILE="$PREFIX/targets/{{ target_name }}/lib/cmake/cccl/cccl-config-version.cmake" -P verify-version.cmake)" == "{{ cccl_version }}" ]] || exit 1'  # [linux]

outputs:
  - name: cuda-cccl
    requirements:
      build:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
        - cuda-cccl_{{ target_platform }} =={{ version }}
        - cccl =={{ cccl_version }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    # Tests are defined at the top level, due to package/output name conflicts.
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: 'CUDA C++ Core Libraries'
      description: |
        CUDA C++ Core Libraries
      doc_url: https://docs.nvidia.com/cuda/index.html

  - name: cuda-cccl_{{ target_platform }}
    build:
      noarch: generic
    files:
      - targets  # [linux]
      - Library\lib\x64\cmake                      # [win]
      - Library\include\targets\{{ target_name }}  # [win]
    requirements:
      build:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
      host:
        - cuda-version {{ cuda_version }}
      run:
        - {{ pin_compatible("cuda-version", max_pin="x.x") }}
      run_constrained:
        - arm-variant * {{ arm_variant_type }}  # [aarch64]
    test:
      commands:
        - test -d $PREFIX/targets/{{ target_name }}/lib      # [linux]
        - test -d $PREFIX/targets/{{ target_name }}/include  # [linux]
        - if not exist %LIBRARY_LIB%\{{ target_name }}\cmake exit 1    # [win]
        - if not exist %LIBRARY_INC%\targets\{{ target_name }} exit 1  # [win]
    about:
      home: https://developer.nvidia.com/cuda-toolkit
      license_file: LICENSE
      license: LicenseRef-NVIDIA-End-User-License-Agreement
      license_url: https://docs.nvidia.com/cuda/eula/index.html
      summary: 'CUDA C++ Core Libraries'
      description: |
        CUDA C++ Core Libraries
      doc_url: https://docs.nvidia.com/cuda/index.html

about:
  home: https://developer.nvidia.com/cuda-toolkit
  license_file: LICENSE
  license: LicenseRef-NVIDIA-End-User-License-Agreement
  license_url: https://docs.nvidia.com/cuda/eula/index.html
  summary: 'CUDA C++ Core Libraries'
  description: |
    CUDA C++ Core Libraries
  doc_url: https://docs.nvidia.com/cuda/index.html

extra:
  recipe-maintainers:
    - conda-forge/cuda
